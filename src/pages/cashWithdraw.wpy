<template lang="wxml" minapp="wepy">
  <view class="common-container">
    <view class="font-black item" wx:for="{{list}}" wx:key="key">
      <text>{{item.desc}}元</text>
      <view class="operate-btn flex-wrapper center">
        <view class="btn-money" style="padding: 14rpx 30rpx">{{item.money}}元</view>
        <view class="weui-btn weui-btn_primary btn" style="padding: 14rpx 30rpx" @tap="tempSubmit({{item.id}}, {{item.money}})" wx:if="{{item.money > 0}}">申请提现</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { getCircleList } from '../api/zone'
import { withdrawCash } from '../api/finance'
import { getOnlyDate, showMsg } from '../utils/common'
import { cashWithdrawObj } from '../utils/normalize'
export default class CashWithdrawal extends wepy.page {
  config = {
    navigationBarTitleText: '收款提现'
  }
  data = {
    memberInfo: null,
    classInfo: null,
    pn: 1,
    ps: 10,
    list: [],
    loading: false,
    loadFinished: false
  }
  onPullDownRefresh() {
    this.resetData()
    this.getZoneList()
  }
  onReachBottom() {
    if (this.loading || this.loadFinished) return
    this.getList()
  }
  resetData() {
    this.pn = 1
    this.ps = 10
    this.loading = false
    this.loadFinished = false
    this.list = []
    this.$apply()
  }
  methods = {
    submit(id) {
      withdrawCash({
        class_id: this.classInfo.id,
        collection_id: Number(id),
        amount: this.money
      }).then(res => {
        if (res.data.success) {
          showMsg('操作成功')
          this.$apply()
        }
      })
    },
    tempSubmit(id, money) {
      wx.navigateTo({
        url: `withdraw?id=${id}&money=${money}`
      })
    }
  }
  onLoad() {
    this.memberInfo = wx.getStorageSync('memberInfo')
    this.classInfo = wx.getStorageSync('classInfo')
    this.getList()
    this.$apply()
  }
  getList() {
    const id = this.classInfo.id
    getCircleList({
      class_id: id,
      see_type: id ? '' : 'all',
      type: 'collection',
      pn: this.pn,
      ps: this.ps
    }).then(res => {
      let { list } = res.data
      list = list.map(cashWithdrawObj)
      this.loading = false
      this.pn++
      this.list = [...this.list, ...list]
      if (list.length < this.ps) {
        this.loadFinished = true
      }
      this.$apply()
    })
  }
}
</script>

<style lang="scss">
@import '../styles/buttons.wxss';
@import '../styles/mixins.scss';
.item {
  border-bottom: 2rpx solid #f2f2f2;
  padding-bottom:40rpx;
  margin-bottom:40rpx;
  .operate-btn {
    width:80%;
    margin:auto;
    margin-top: 40rpx;
    & > view {
      border-radius: 10rpx;
    }
  }
}
.btn-money {
  padding:7px 16px;
  background-color:#F2F2F2;
  color:#6C6C73;
  width:40%;
  text-align: center;
}
</style>
