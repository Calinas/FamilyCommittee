<template lang="wxml" minapp="wepy">
  <view class="common-container" style="padding-top: 120rpx;">
    <textarea class="msg-wrapper" placeholder="{{placeholder}}" @input="bindChange" id="msg"></textarea>
    <view class="img-list flex-wrapper" wx:if="{{activeType === 'zone' || activeType === 'activity'}}">
      <repeat for="{{img}}" index="index" item="item">
        <view class="img-item">
          <image @tap='previewImage' mode="widthFix" class='img' src='{{item}}'/>
          <image src='/images/close-white.png' @tap="deleteFn('img',{{index}})" class="close-btn"/>
        </view>
      </repeat>
      <view class="img-item" @tap="chooseImage">
        <image mode="widthFix" class='img' src='/images/add-img.png'/>
      </view>
    </view>
    <block wx:if="{{activeType === 'notice'}}">
      <picker class="select-common-picker" mode="selector" value="{{isRemind}}" range="{{remindType}}" range-key="title" id="isRemind" @change="bindChange">
        <view class="flex-wrapper between">
        <view>
            <text class="iconfont icon-user font-black"></text>
            <text class="font-black">是否发推送消息提醒</text>
          </view>
          <text>{{remindType[isRemind].title}}</text>
        </view>
      </picker>
    </block>
    <!-- 收款 -->
    <block wx:if="{{activeType === 'money'}}">
      <view class="flex-wrapper between select-common-picker" style="display: none;">
        <view>
          <text class="iconfont icon-user font-black"></text>
          <text class="font-black">向谁收款</text>
        </view>
        <text>全体学生</text>
      </view>
      <view class="flex-wrapper between select-common-picker" @tap="addNew('showAddMoney')">
        <view>
          <text class="iconfont icon-user font-black"></text>
          <text class="font-black">增加选项</text>
        </view>
        <text>可重复添加多个收款选项</text>
      </view>
    </block>
    <!-- 活动 -->
    <block wx:if="{{activeType === 'activity'}}">
      <view class="flex-wrapper between select-common-picker" style="display: none;">
        <view>
          <text class="iconfont icon-user font-black"></text>
          <text class="font-black">谁可以报名</text>
        </view>
        <view>
          <text>全体学生</text>
        </view>
      </view>
      <picker class="select-common-picker" mode="selector" value="{{activityType}}" range="{{activityJoinType}}" range-key="title" @change="bindChange" id="activityType">
        <view class="flex-wrapper between">
          <view>
            <text class="iconfont icon-user font-black"></text>
            <text class="font-black">单选或多选</text>
          </view>
          <view>
            <text>{{activityJoinType[activityType].title}}</text>
            <text class="iconfont icon-arrow-right"></text>
          </view>
        </view>
      </picker>
      <view class="flex-wrapper between select-common-picker" @tap="addNew('showAddActivity')">
        <view>
          <text class="iconfont icon-user font-black"></text>
          <text class="font-black">增加选项</text>
        </view>
        <text>点击添加</text>
      </view>
    </block>
    </text>
    <Modal
      sureBtnText="添加完成"
      cancelBtnText="再添加一项"
      placeholderText="请输入您想新增的活动项目名"
      :flag.sync="showAddActivity"
      @cancel.user="cancel"
      @sure.user="sure"
    ></Modal>
    <Modal2
      sureBtnText="添加完成"
      cancelBtnText="再添加一项"
      placeholderText="收款选项名"
      placeholderText2="金额"
      :flag.sync="showAddMoney"
      @cancel.user="cancel"
      @sure.user="moneySureFn"
    ></Modal2>
    <view class="tag-wrapper activity-list flex-wrapper" wx:if="{{activityList.length}}">
      <repeat for="{{activityList}}" index="index" item="item">
        <view class="tag tag-light-grey" @tap="deleteFn('activityList',{{index}})">
          <text class="iconfont icon-delete"></text>
          <text>{{item.name}}</text>
        </view>
      </repeat>
    </view>
    <view class="tag-wrapper activity-list flex-wrapper" wx:if="{{moneyList.length}}">
      <repeat for="{{moneyList}}" index="index" item="item">
        <view class="tag tag-light-grey" @tap="deleteFn('moneyList',{{index}})">
          <text class="iconfont icon-delete"></text>
          <text>{{item.name}}--{{item.money}}元</text>
        </view>
      </repeat>
    </view>
    <view class="fixed-bottom-btn top fixed-bottom-circle" wx:if="{{activeType === 'zone'}}">
      <view class="flex-wrapper center between top-select">
        <view class="choose-see flex-wrapper center between">
          <text wx:for="{{type}}" wx-key="key" @tap="selectSeeType({{item.id}})" class="choose-see-btn {{item.id === seeType ? 'choose-see-btn-active' : ''}}">{{item.title}}</text>
        </view>
        <view @tap="submit" class="submit-btn">发表</view>
      </view>
    </view>
    <view class="fixed-bottom-btn top right" @tap="submit" wx:else>发表</view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { connect, getStore } from 'wepy-redux'
import { setFromPublish } from 'store/actions'
import Modal from 'components/modal'
import Modal2 from 'components/modal2'
import { showMsg, isEmptyString, uploadImage } from 'utils/common'
import { addCircles, addCollection, addActivity, addNotify } from 'api/zone'

let store = getStore()

export default class Publish extends wepy.page {
  config = {
    navigationBarTitleText: '发布'
  }
  components = {
    Modal,
    Modal2
  }
  data = {
    showAddActivity: false,
    showAddMoney: false,
    msg: '',
    img: [],
    seeType: 0,
    activityType: 0,
    activityJoinType: [
      {
        id: 0,
        title: '单选',
        type: 'radio'
      },
      {
        id: 1,
        title: '多选',
        type: 'select'
      }
    ],
    remindType: [
      {
        id: 0,
        title: '否'
      },
      {
        id: 1,
        title: '是'
      }
    ],
    type: [
      {
        id: 0,
        title: '班级可见',
        type: 'class'
      },
      {
        id: 1,
        title: '全部可见',
        type: 'all'
      }
    ],
    typeList: {
      zone: '家长圈',
      notice: '通知',
      activity: '活动',
      money: '收款'
    },
    placeholder: '请在此发表您的感想',
    activeType: 'zone',
    activityList: [],
    canSubmit: false,
    memberInfo: null,
    classInfo: null,
    money: '',
    isRemind: 1,
    moneyList: [],
    maxPhotoCount: 9,
    uploads: []
  }
  commonFn(res) {
    if (res.data.success) {
      setFromPublish(true)
      showMsg('发布成功', 2000)
      setTimeout(() => {
        wx.navigateBack()
      }, 2000)
    }
  }
  onLoad = (e) => {
    this.classInfo = wx.getStorageSync('classInfo')
    this.memberInfo = wx.getStorageSync('memberInfo')
    const type = e.type
    wx.setNavigationBarTitle({
      title: `发布${this.typeList[type]}`
    })
    if (type !== 'zone') {
      this.placeholder = `请在此录入您的${this.typeList[type]}详情`
    }
    this.activeType = type
    this.$apply()
  }
  checkCanSubmit() {
    const msg = `请填写您的${this.typeList[this.activeType]}描述详情`
    if (isEmptyString(this.msg)) {
      showMsg(msg)
      return false
    }

    return true
  }
  saveCircles(commonParams, type) {
    const params = Object.assign({}, commonParams, {
      img_url: this.img
    })
    const circleParams = Object.assign({}, params, {
      see_type: this.type[this.seeType].type
    })
    if (type === 'money') {
      if (!this.moneyList.length) {
        showMsg('请至少添加一个收款条目')
        return
      }
      const moneyParams = Object.assign({}, params, {
        item: this.moneyList,
        type: 'student'
      })
      addCollection(moneyParams).then(res => { this.commonFn(res) })
    } else {
      addCircles(circleParams).then(res => { this.commonFn(res) })
    }
  }
  saveActivity(commonParams) {
    if (!this.activityList.length) {
      showMsg('请至少添加一个活动选项')
      return
    }
    const params = Object.assign({}, commonParams, {
      selectType: this.activityJoinType[this.activityType].type,
      sign_type: 'all',
      item: this.activityList,
      img_url: this.img
    })
    addActivity(params).then(res => { this.commonFn(res)})
  }
  saveNotice(commonParams) {
    const params = Object.assign({}, commonParams, {
      remind: Number(this.isRemind)
    })
    addNotify(params).then(res => { this.commonFn(res) })
  }
  checkRepeat(value, arr) {
    let retValue = false
    for (let i = 0, len = arr.length; i < len; i++) {
      if (arr[i].name === value) {
        retValue = true
        break
      }
      retValue = false
    }
    return retValue
  }
  watch = {
    msg (newVal, oldVal) {
      if (!isEmptyString(newVal)) {
        this.canSubmit = true
      }
      this.$apply()
    }
  }
  methods = {
    selectSeeType(id) {
      this.seeType = id
      this.$apply()
    },
    chooseImage() {
      if (this.img.length > this.maxPhotoCount) {
        showMsg('最多上传9张图')
        return
      }
      let _this = this
      wx.chooseImage({
        count: this.maxPhotoCount,
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: res => {
          const length = res.tempFilePaths.length
          let tempArr = []
          if (this.img.length + length > this.maxPhotoCount) {
            wx.showToast({
              title: '最多只能选择' + this.maxPhotoCount + '张图片',
              icon: 'none'
            })
          }
          wx.showLoading({title: '图片上传中'})
          res.tempFilePaths.forEach(path => {
            let upload = {}
            upload.path = path
            upload.error = false
            upload.uploadProgress = wx.uploadFile({
              url: `${wepy.$appConfig.baseUrl}/file/uploadPic`,
              filePath: path,
              formData: {
                'member_id': this.memberInfo.member_id,
                'member_token': this.memberInfo.member_token,
                'folder': 'committee'
              },
              name: 'file',
              success: res => {
                const data = JSON.parse(res.data)
                if (data.data && data.data.file_url) {
                  const url = data.data.file_url
                  tempArr.push(url)
                  _this.img.push(url)
                }
                if (tempArr.length === length) {
                  setTimeout(() => {
                    wx.hideLoading()
                  }, 1000)
                }
                _this.$apply()
              }
            })
            upload.uploadProgress.onProgressUpdate(function(res) {
              upload.progress = res.progress
            })
            _this.uploads.push(upload)
            _this.$apply()
          })
        }
      })
    },
    submit() {
      // if (!this.canSubmit) {
      //   showMsg('请检查发布内容!')
      //   return
      // }
      this.checkCanSubmit()
      const commonParams = Object.assign({}, {
        class_id: this.classInfo.id,
        type: this.seenIndex,
        desc: this.msg
      })
      if (this.activeType === 'zone' || this.activeType === 'money') {
        this.saveCircles(commonParams, this.activeType)
      } else if (this.activeType === 'activity') {
        this.saveActivity(commonParams)
      } else if (this.activeType === 'notice') {
        this.saveNotice(commonParams)
      }
    },
    cancel() {
      this.showAddActivity = false
      this.showAddMoney = false
      this.$apply()
    },
    sure(value, type) {
      if (this.checkRepeat(value, this.activityList)) {
        showMsg('请不要输入重复的活动项目')
        return
      }
      const obj = {
        name: value
      }
      this.activityList.push(obj)
      if (type === 'save') {
        this.showAddActivity = false
      }
      this.$apply()
    },
    moneySureFn(value1, value2, type) {
      const obj = {
        name: value1,
        money: value2
      }
      this.moneyList.push(obj)
      if (type === 'save') {
        this.showAddMoney = false
      }
      this.$apply()
    },
    addNew(flag) {
      this[flag] = true
      this.$apply()
    },
    deleteFn (arr, index) {
      this[arr].splice(index, 1)
      this.$apply()
    },
    bindChange(e) {
      this[e.currentTarget.id] = e.detail.value
      this.$apply()
    }
  }
}
</script>

<style lang="scss">
@import '../styles/mixins.scss';
@include upload-img-wrapper;
.choose-see {
  width: 52%;
  &-btn {
    height:80rpx;
    line-height:80rpx;
    display: inline-block;
    padding: 0 20rpx;
    border-radius: 20rpx;
    font-size: 28rpx;
    border:2rpx solid #bbb;
    &-active {
      color: #1F5985;
      font-size: 32rpx;
      border:2rpx solid #1F5985;
    }
  }
}
.submit-btn {
  background-color:#1F9E3C;
  color:#fff;
  border-radius:10rpx;
  height:80rpx;
  line-height:80rpx;
  width:16%;
}
.fixed-bottom-circle {
  background-color: #fff;
}
.top-select {
  width:90%;
  margin:0 auto;
  color:#000;
}
.common-container {
  padding-bottom: 100rpx;
}
.icon-arrow-right {
  color: #808080;
  font-size: 24rpx;
  margin-left: 20rpx;
}
textarea {
  width:calc(100% - 80rpx);
  border:2rpx solid #f1f1f1;
  margin-bottom:40rpx;
  padding:40rpx;
  line-height:1.6;
  border-radius:20rpx;
}

textarea::-webkit-input-placeholder {
  color: #9c9c9c;
}
.select-common-picker {
  padding-bottom:30rpx;
  width:90%;
  margin:0 auto;
  margin-top:40rpx;
  @include border-bottom;
  &.fixed {
    margin-top: 0;
    width: 40%;
  }
}
.icon-user {
  margin-right: 10rpx;
}
.activity-list {
  flex-wrap: wrap;
  margin-top: 40rpx;
  .tag {
    position: relative;
    margin-bottom: 20rpx;
  }
  .icon-delete {
    font-size: 24rpx;
    color: red;
    position: absolute;
    right:0rpx;
    top:-6rpx;
  }
}
</style>
