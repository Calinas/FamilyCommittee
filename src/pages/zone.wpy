<template lang="wxml" minapp="wepy">
  <view class="common-container common-container-grey" style="padding: 0;position:relative" @tap="closeToggle">
    <view class="img-mask">
      <image src="/images/banner1.jpg" mode="scaleToFill" class="bg-img"/>
      <view class="mask"></view>
      <block>
        <view class="btn btn-set flex-wrapper center" catchtap="toggleMenu('setFlag')">
          <text class="iconfont icon-menu"></text>
          <text>设置</text>
        </view>
        <view class="btn btn-publish flex-wrapper center" catchtap="toggleMenu('publishFlag')">
          <text class="iconfont icon-edit"></text>
          <text>发布</text>
        </view>
      </block>
      <view class="caption" wx:if="{{classInfo}}">
        <!-- <text class="school"></text> -->
        <text class="class">{{classInfo.name}}</text>
      </view>
    </view>
    <!-- 筛选框 -->
    <view class="menu-wrapper flex-wrapper">
      <view data-type="circles" @tap="filter('circles')">
        <image src="/images/icon/2.jpg" mode="scaleToFill" />
        <text>家长圈</text>
      </view>
      <view type="collection" @tap="filter('collection')">
        <image src="/images/icon/money.jpg" mode="scaleToFill" />
        <text>收款</text>
      </view>
      <view type="notify" @tap="filter('notify')">
        <image src="/images/icon/4.jpg" mode="scaleToFill" />
        <text>通知</text>
      </view>
      <view type="activity" @tap="filter('activity')">
        <image src="/images/icon/5.jpg" mode="scaleToFill" />
        <text>活动</text>
      </view>
      <view type="account" @tap="filter('account')">
        <image src="/images/icon/photos.jpg" mode="scaleToFill" />
        <text>记账</text>
      </view>
    </view>

    <view class="item-wrapper" wx:if="{{list.length}}">
      <view class="item" wx:for="{{list}}" wx:key="key" wx:for-index="listIndex">
        <view class="flex-wrapper center">
          <image src="{{item.member.head_img}}"  class="small-avatar" />
          <text>{{item.member.class_nickname}}发布了{{type[item.app_type]}}</text>
        </view>
        <view class="font-small font-grey text-right">{{item.created_at}}</view>
        <view class="item-desc">{{item.info.description}}</view>
        <view class="img-list flex-wrapper" wx:if="{{item.image.length}}">
          <image src="{{img+'?imageMogr2/thumbnail/300x/gravity/Center/crop/300x300'}}" wx:key="keyIndex" wx:for-item="img" wx:for="{{item.image}}" class="img-item" @tap="preview({{img}},{{item.image}})" />
        </view>
        <view class="font-grey iconfont icon-message text-right" @tap="addComment('add', {{item.id}})"></view>
        <block wx:if="{{item.app_type === 'activity'}}">
          <view class="tag-wrapper item-tag" wx:if="{{item.info.item.length}}">
            <text class="tag tag-empty font-grey {{ item.checked ? 'active': '' }}" wx:for-index="activityIndex" wx:key="activityIndex" wx:for="{{item.info.item}}" @tap="joinActivity({{item.activity_id}},{{item.id}},{{listIndex}},{{activityIndex}})">{{item.name}}</text>
          </view>
          <view class="tag-wrapper">
            <text class="tag tag-blue" @tap="submitJoinActivity">选好了，报名</text>
            <text class="tag tag-grey">已报名</text>
          </view>
          <!-- 报名结果 -->
          <block wx:for="{{item.info.item}}" wx:for-item="activity" wx:key="key">
            <view class="result-wrapper" wx:if="{{activity.student_list.length}}">
              <view class="title item-tag">
                <text class="tag tag-empty">{{activity.name}}</text>
                <text>有{{activity.student_list.length}}人报名</text>
              </view>
              <view class="person-list tag-wrapper" wx:for="{{activity.student_list}}" wx:for-item="student" wx:key="key">
                <text class="tag tag-light-grey">{{student.name}}</text>
              </view>
            </view>
          </block>
          <!-- 没有参加报名的 -->
            <view class="result-wrapper" wx:if="{{item.info.not_join_student_list.length}}">
              <view class="title item-tag">
                <text>有{{item.info.not_join_student_list.length}}人未报名</text>
              </view>
              <view class="person-list tag-wrapper">
                <text class="tag tag-light-grey" wx:for="{{item.info.not_join_student_list}}" wx:for-item="nostudent" wx:key="key">{{nostudent.name}}</text>
              </view>
            </view>
        </block>
        <!-- 收款 -->
        <block wx:if="{{item.app_type === 'collection'}}">
          <view class="tag-wrapper item-tag" wx:if="{{item.info.item.length}}">
            <text class="tag tag-empty" wx:for="{{item.info.item}}" wx:for-item="collection" wx:key="key" @tap="pay({{item.id}}, {{collection.id}})">{{collection.name}}</text>
          </view>
        </block>
        <!-- 留言结果 -->
        <view class="comment-wrapper item-desc font-grey" wx:if="{{item.comment_list.count}}">
          <view class="item" wx:for="{{item.comment_list.list}}" wx:for-item="comment" wx:key="key">
            <text class="font-blue" @tap="addComment('reply',{{item.id}},{{comment.id}},{{comment.member.id}},{{comment.member.class_nickname}})">{{comment.member.class_nickname}}: </text>
            <text>{{comment.content}}</text>
          </view>
        </view>
      </view>
    </view>
    <!-- <view wx:if="{{!this.loadFinished && !list.length}}" class="text-center">暂无内容</view> -->

    <!-- 左边侧边栏 -->
    <view class="sidebar sidebar-set bg-white {{setFlag ? 'show': ''}}">
      <view class="list">
        <view class="title font-bold font-black">
          <text class="iconfont icon-setting"></text>
          <text>设置</text>
        </view>
        <view catchtap="jumpPage('bindRelationship?type=edit')" wx:if="{{classInfo.id}}">身份绑定</view>
        <!-- <view catchtap="jumpPage('bindPhone')">手机绑定</view> -->
        <view catchtap="jumpPage('cashflow')" wx:if="{{auth.finance}}">财务流水</view>
        <view catchtap="jumpPage('cashWithdraw')" wx:if="{{auth.finance}}">收款提现</view>
        <view catchtap="jumpPage('authorize')" wx:if="{{auth.president}}">家委会管理</view>
        </view>
    </view>
    <!-- 右边侧边栏 -->
    <view class="sidebar sidebar-publish bg-white {{publishFlag ? 'show': ''}}">
      <view class="list">
        <view class="title font-bold font-black">
          <text class="iconfont icon-publish"></text>
          <text>发布</text>
        </view>
        <view type="family" catchtap="jumpPage('publish','zone')" wx:if="{{auth.circles}}">家长圈</view>
        <view catchtap="jumpPage('photos')" wx:if="{{auth.photos}}">相册</view>
        <view catchtap="jumpPage('publish','notice')" wx:if="{{auth.notify}}">通知</view>
        <view catchtap="jumpPage('publish','activity')" wx:if="{{auth.activity}}">活动</view>
        <view catchtap="jumpPage('publish','money')" wx:if="{{auth.finance}}">收款</view>
        <view catchtap="jumpPage('recordCashflow')" wx:if="{{auth.finance}}">记账</view>
        </view>
    </view>
    <CurrentModal
      sureBtnText="确认"
      cancelBtnText="取消"
      placeholderText="请输入评论内容"
      :flag.sync="commentFlag"
      :commentInput.sync="commentInput"
      @cancel.user="commentCancel"
      @sure.user="commentSure"
      @input.user="bindCommentInput"
    ></CurrentModal>
    <SelectModal
      :flag.sync="selectFlag"
      :list.sync="payMemberList"
      @cancel.user="selectCancel"
      @sure.user="selectSure"
    >
    </SelectModal>
  </view>
</template>

<script>
import wepy from 'wepy'
import SelectModal from '../components/selectModal'
import CurrentModal from '../components/commentModal'
import { showMsg, previewImage } from '../utils/common'
import { getCircleList, addComment, joinActivity } from '../api/zone'
import { addOrder, getPaymentParams } from '../api/finance'
import { getAuth } from '../api/authorize'
import { checkStudent } from '../api/user'
export default class Zone extends wepy.page {
  config = {
    navigationBarTitleText: '发现',
    enablePullDownRefresh: true
  }
  components = {
    CurrentModal,
    SelectModal
  }
  data = {
    commentFlag: false,
    selectFlag: false,
    activeType: 'circles',
    setFlag: false,
    publishFlag: false,
    type: {
      circles: '家长圈',
      collection: '收款',
      notify: '通知',
      activity: '活动',
      account: '记账'
    },
    pn: 1,
    ps: 10,
    list: [],
    payMemberList: [],
    classInfo: null,
    memberInfo: null,
    schoolInfo: null,
    loading: false,
    loadFinished: false,
    commentInput: '',
    currentReplyId: -1,
    currentReplyRootId: -1,
    currentReplyToCommentId: -1,
    currerntJoinAcitivytId: -1,
    currerntSubActivityId: [],
    currentCollectionId: -1,
    auth: {
      president: false,
      finance: false,
      activity: false,
      notify: false,
      photos: false,
      circles: false
    },
    memberList: [],
    studentIds: [],
    firstInit: true
  }
  watch = {
    classInfo(newVal, oldVal) {
      // 切换了班级之后数据要更新
      if (oldVal !== null) {
        this.resetData()
        this.getAuthList()
        this.getZoneList()
      }
    },
    currentJoinActivityId(newVal, oldVal) {
      if (newVal > 0) {
        this.currerntSubActivityId = []
        this.$apply()
      }
    }
  }
  resetData() {
    this.studentIds = []
    this.pn = 1
    this.list = []
    this.$apply()
  }
  onPullDownRefresh() {
    this.resetData()
    this.getZoneList()
  }
  onReachBottom() {
    if (this.loading || this.loadFinished) return
    this.getZoneList()
  }
  onShow() {
    this.currerntJoinAcitivytId = -1
    this.currerntSubActivityId = []
    this.classInfo = wx.getStorageSync('classInfo')
    this.$apply()
  }
  onLoad() {
    if (!this.checkDataExist('memberInfo')) {
      wx.reLaunch({
        url: 'login'
      })
    } else {
      this.classInfo = wx.getStorageSync('classInfo')
      this.classInfo && this.getAuthList()
      this.memberInfo = wx.getStorageSync('memberInfo')
      this.$parent.globalData.userData = this.memberInfo
      this.$apply()
      this.getZoneList()
    }
  }
  getAuthList() {
    getAuth({
      class_id: this.classInfo.id
    }).then(res => {
      this.checkAuth(res.data.data)
    })
  }
  formatAllAuth(obj) {
    Object.keys(obj).forEach(key => {
      obj[key] = true
    })
    this.$apply()
  }
  formatSingleAuth(name) {
    this.auth[name] = true
    this.$apply()
  }
  checkAuth(list) {
    for (let i = 0, len = list.length; i < len; i++) {
      let {code, is_auth: isAuth} = list[i]
      if (code === 'president' && isAuth) {
        this.formatAllAuth(this.auth)
        break
      } else {
        isAuth && this.formatSingleAuth(code)
      }
    }
  }
  checkDataExist(key) {
    if (wx.getStorageSync(key)) {
      return true
    }
    return false
  }
  getZoneList() {
    this.loading = true
    this.$apply()
    const id = this.classInfo.id
    getCircleList({
      class_id: id,
      see_type: id ? '' : 'all',
      type: this.activeType,
      pn: this.pn,
      ps: this.ps,
      comment_count: 3
    }).then(res => {
      let { list } = res.data
      this.loading = false
      this.pn++
      this.list = [...this.list, ...list]
      if (list.length < this.ps) {
        this.loadFinished = true
      }
      this.$apply()
    })
  }
  paymentParams(id) {
    getPaymentParams({
      order_id: id
    }).then(res => {
      let data = res.data.payment_params
      wx.requestPayment({
        timeStamp: String(data.timeStamp),
        nonceStr: data.nonceStr,
        package: data.package,
        paySign: data.paySign,
        signType: 'MD5',
        success() {
          console.log('成功了')
        }
      })
    })
  }
  addToOrder(id) {
    addOrder({
      class_id: this.classInfo.id,
      student_ids: this.studentIds,
      collection_item_id: id
    }).then(res => {
      this.paymentParams(res.data.data.id)
    })
  }
  methods = {
    pay(momentId, collectionId) {
      checkStudent({
        class_id: this.classInfo.id,
        moment_id: momentId,
        is_pay: 1
      }).then(res => {
        this.payMemberList = res.data.list
        if (this.payMemberList.length > 1) {
          this.selectFlag = true
          this.currentCollectionId = collectionId
          this.$apply()
        } else {
          this.studentIds = []
          this.studentIds.push(this.payMemberList[0].id)
          this.addToOrder(collectionId)
        }
      })
    },
    submitJoinActivity() {
      joinActivity({
        class_id: this.classInfo.id,
        activity_item_id: this.currerntSubActivityId,
        activity_id: this.currerntJoinAcitivytId
      }).then(res => {
        if (res.data.success) {
          showMsg('提交成功')
          this.currerntSubActivityId = []
          this.$apply()
        }
      })
    },
    joinActivity(id, subId, listIndex, activityIndex) {
      if (!this.classInfo) {
        showMsg('请先选择班级')
        return
      }
      this.currerntJoinAcitivytId = id
      const index = this.currerntSubActivityId.indexOf(subId)
      if (index > -1) {
        this.currerntSubActivityId.splice(index, 1)
        this.list[listIndex].info.item[activityIndex].checked = false
      } else {
        this.currerntSubActivityId.push(subId)
        this.list[listIndex].info.item[activityIndex].checked = true
      }
      this.$apply()
    },
    addComment(type, id, rootId, toCommentId, name) {
      if (!this.classInfo) {
        showMsg('请先选择班级')
        return
      }
      this.commentFlag = true
      this.currentReplyId = id
      this.currentReplyRootId = type === 'add' ? 0 : rootId
      if (name !== undefined) {
        this.commentInput = `@${name}:`
      } else {
        this.commentInput = ''
      }
      this.$apply()
    },
    bindCommentInput (value) {
      this.commentInput = value
      this.$apply()
    },
    commentSure () {
      this.commentFlag = false
      addComment({
        class_id: this.classInfo.id,
        moment_id: this.currentReplyId,
        content: this.currentReplyId > 0 ? this.commentInput.replace(/^@.+:/, '') : this.commentInput,
        root_id: this.currentReplyRootId,
        to_comment_id: this.currentReplyRootId
      }).then(res => {
        if (res.data.success) {
          this.commentInput = ''
          this.resetData()
          this.getZoneList()
          this.$apply()
        }
      })
    },
    commentCancel () {
      this.commentFlag = false
      this.commentInput = ''
      this.$apply()
    },
    filter (type) {
      this.resetData()
      this.activeType = type
      this.$apply()
      this.getZoneList()
    },
    jumpPage (pageName, type) {
      this.publishFlag = false
      this.setFlag = false
      wx.navigateTo({
        url: `${pageName}?type=${type}`
      })
    },
    toggleMenu (type) {
      if (!this.classInfo) {
        showMsg('请选绑定班级', 3000)
        return
      }
      this[type] = !this[type]
      this.$apply()
    },
    closeToggle () {
      this.setFlag = false
      this.publishFlag = false
      this.$apply()
    },
    preview(img, imgList) {
      previewImage(img, imgList)
    },
    selectCancel() {
      this.selectFlag = false
      this.$apply()
    },
    selectSure(value) {
      if (!value.length) {
        showMsg('请选择')
        return
      }
      const val = value
      this.studentIds = [...val]
      this.selectFlag = false
      this.$apply()
      this.addToOrder(this.currentCollectionId)
    }
  }
}
</script>

<style lang="scss">
@import '../styles/mixins.scss';
@include upload-img-wrapper;
.img-list {
  margin-bottom: 0;
}
.icon-message {
  display: block;
  padding: 20rpx 0;
}
.menu-wrapper {
  background-color: #fff;
  padding: 40rpx;
  color: #000;
  & > view {
    width: 20%;
    text-align: center;
    & > image {
      width: 60rpx;
      height: 60rpx;
      display: block;
      margin: 0 auto;
      margin-bottom: 20rpx;
    }
    & > text {
      display: block;
      margin: 0 auto;
    }
  }
}
.img-mask {
  position: relative;
  color: #fff;
  height: 360rpx;
  .iconfont {
    margin-right: 10rpx;
  }
  .icon-edit {
    transform:scaleX(0.9);
  }
  .bg-img {
    width: 100%;
    height: 360rpx;
  }
  .mask {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background:rgba(0,0,0,.4);
  }
  .btn {
    position: absolute;
    top: 40rpx;
    &-set {
      left: 20rpx;
    }
    &-publish {
      right: 20rpx;
    }
  }
  .caption {
    position: absolute;
    bottom: 30rpx;
    left: 40rpx;
    text {
      display: block;
    }
    .school {
      font-size: 24rpx;
    }
    .class {
      font-size: 30rpx;
    }
  }
}
.item-wrapper {
  margin-top: 30rpx;
  background-color: #fff;
  padding: 30rpx;
  color: #000;
  & > .item {
    margin-bottom:30rpx;
    @include border-bottom;
  }
}
.item {
  &-desc {
    background-color: #f1f1f1;
    color: #000;
    padding: 30rpx;
    border-radius: 12rpx;
    overflow: hidden;
    margin: 40rpx 0;
    &.comment-wrapper {
      margin-top: 0;
    }
  }
  &-tag {
    color: #464646;
  }
  .tag {
    margin-bottom: 20rpx;
    &.active {
      border: 2rpx solid #000;
      color: #000;
    }
  }
}
.comment-wrapper {
  line-height: 50rpx;
}
.sidebar {
  position: fixed;
  height: 100%;
  top: 0;
  width: 60%;
  z-index: 2;
  transition: all .3s;
  &.show {
    transform: translateX(0);
  }
  &-set {
    left: 0;
    transform: translateX(-100%);
  }
  &-publish {
    right: 0%;
    transform:translateX(100%);

  }
  .list {
    position:absolute;
    left:0;
    right:0;
    bottom:0;
    top:0;
    margin:auto;
    width:80%;
    text-align:center;
    height:70%;
    & > view {
      height:100rpx;
      line-height:100rpx;
      border-bottom:2rpx solid #f1f1f1;
      &.title {
        font-size: 40rpx;
        font-weight: bold;
        .iconfont {
          margin-right: 20rpx;
        }
      }
    }
  }
}

</style>
