<template lang="wxml" minapp="wepy">
  <view class="common-container common-container-grey" style="position:relative" @tap="closeToggle">
    <view class="img-mask">
      <image src="/images/banner2.jpg" mode="scaleToFill" class="bg-img"/>
      <view class="mask"></view>
      <block>
        <view class="btn btn-set flex-wrapper center" catchtap="toggleMenu('setFlag')">
          <text class="iconfont icon-menu"></text>
          <text>设置</text>
        </view>
        <view class="btn btn-publish flex-wrapper center" catchtap="toggleMenu('publishFlag')">
          <text class="iconfont icon-edit"></text>
          <text>发布</text>
        </view>
      </block>
      <view class="caption" wx:if="{{classInfo}}">
        <text class="school font-36 font-bold">{{classInfo.school.name}}</text>
        <text class="class font-30">{{gradeType[classInfo.grade_type]}}{{classInfo.year_class}}级{{classInfo.class}}班</text>
      </view>
      <view class="buttons">
        <view catchtap="jumpPage('member')" wx:if="{{auth.president}}" class="flex-wrapper center">
          <image src="../images/icon/icon-member.png" class="small-avatar" mode="scaleToFill"></image>
          <text>成员</text>
        </view>
        <view catchtap="jumpPage('photos')" wx:if="{{auth.photos}}" class="flex-wrapper center">
          <image src="../images/icon/icon-photo.png" class="small-avatar"/>
          <text>相册</text>
        </view>
      </view>
    </view>
    <!-- 筛选框 -->
    <view class="menu-wrapper flex-wrapper">
      <view data-type="circles" @tap="jumpPublish({{item.type}})" wx:for="{{menuList}}">
        <image src="{{item.src}}" mode="scaleToFill" />
        <text>{{item.text}}</text>
      </view>
    </view>

    <view class="item-wrapper" wx:if="{{list.length}}">
      <block wx:for="{{list}}" wx:key="key" wx:for-index="listIndex">
         <view class="item">
          <view class="flex-wrapper center between">
            <view class="flex-wrapper center">
              <image src="{{item.member.head_img}}"  class="small-avatar" />
              <text class="font-32">{{item.member.class_nickname}}发布了{{type[item.app_type]}}</text>
            </view>
            <block wx:if="{{memberInfo.member_id === item.member.id || auth.president}}">
                <!-- 是本人且是付款以外的其他类型 / 是本人且是付款且付款数目为0 -->
                <block wx:if="{{item.app_type !== 'collection'}}">
                  <view class="font-grey iconfont icon-shanchu text-right" catchtap="removeCircle({{item.id}}, {{listIndex}})" ></view>
                </block>
                <block wx:if="{{item.app_type === 'collection' && item.info.total_money <= 0}}">
                  <view class="font-grey iconfont icon-shanchu text-right" catchtap="removeCircle({{item.id}}, {{listIndex}})" ></view>
                </block>
              </block>
          </view>
          <view class="font-small font-grey text-right create-time">{{item.created_at}}</view>
          <block wx:if="{{item.app_type !== 'account'}}">
            <view class="item-desc font-36" wx:if="{{item.info.description}}">{{item.info.description}}</view>
            <view class="img-list flex-wrapper one-img {{item.info.description ? '' : 'extra-margin'}}" wx:if="{{item.image.length === 1}}">
              <image mode="widthFix" src="{{img+'?imageMogr2/thumbnail/300x/gravity/Center/crop/640x360'}}" lazy-load wx:key="keyIndex" wx:for-item="img" wx:for="{{item.image}}" class="img-item" @tap="preview({{img}},{{item.image}})" />
            </view>
            <view class="img-list flex-wrapper" wx:else>
              <image src="{{img+'?imageMogr2/thumbnail/300x/gravity/Center/crop/640x360'}}" wx:key="keyIndex" lazy-load wx:for-item="img" wx:for="{{item.image}}" class="img-item" @tap="preview({{img}},{{item.image}})" />
            </view>
          </block>
          <block wx:if="{{item.app_type === 'account'}}">
            <view class="tag-wrapper flex-wrapper">
              <text class="tag tag-grey">{{item.info.type === 'in' ? '收入': '支出'}}</text>
              <text class="tag tag-empty">{{item.info.money}}元</text>
              <text class="tag tag-empty" wx:if="{{item.info.balance}}">余额：{{item.info.balance}}元</text>
            </view>
            <view class="tag-wrapper flex-wrapper no-padding">
              <text class="tag tag-grey">事由</text>
              <text class="tag tag-empty">{{item.info.description}}</text>
            </view>
          </block>

          <view class="flex-wrapper font-grey font-small see-type {{item.app_type === 'circles' || item.app_type === 'account' ? 'between' : 'right'}}">
            <text wx:if="{{item.app_type === 'circles' && item.see_type === 'all'}}">全部可见</text>
            <text wx:if="{{item.app_type === 'circles' && item.see_type === 'class'}}">仅班级可见</text>
            <text @tap="preview({{item.image}}, {{item.image}})" wx:if="{{item.image.length && item.app_type === 'account'}}">查看记账凭证</text>
            <view class="flex-wrapper icon-wrapper">
              <view class="font-grey iconfont icon-dianzan text-right" catchtap="addLike({{item.id}},{{listIndex}},{{item.is_like}})"></view>
              <view class="font-grey iconfont icon-message text-right" catchtap="addComment('add', {{listIndex}}, {{item.id}})"></view>
              <view class="font-grey iconfont icon-share text-right" catchtap="shareCircle({{item.app_type}})"></view>
            </view>
          </view>
          <view class="font-grey" wx:if="{{item.like_list.count}}">
            <text class="iconfont icon-xin" style="margin-right: 10rpx;"></text>
            <text wx:for="{{item.like_list.list}}" wx:for-item="like" wx:key="{{keyIndex}}">{{like.member.class_nickname}}<text wx:if="{{index !== item.like_list.count - 1}}">，</text></text>共{{item.like_list.count}}人觉得很赞
          </view>
          <block wx:if="{{item.app_type === 'activity'}}">
            <block wx:if="{{!item.is_apply}}">
              <view class="tag-wrapper item-tag" wx:if="{{item.info.item.length}}">
                <text class="tag-big tag tag-empty font-grey {{ item.checked ? 'active': '' }}" wx:for-index="activityIndex" wx:key="activityIndex" wx:for="{{item.info.item}}" @tap="joinActivity({{item.activity_id}},{{item.id}},{{listIndex}},{{activityIndex}})">{{item.name}}</text>
              </view>
              <view class="tag-wrapper">
                <text class="tag tag-big tag-blue" @tap="submitJoinActivity">选好了，报名</text>
              </view>
            </block>
            <text class="tag tag-grey" wx:else style="margin-top: 30rpx;">已报名</text>
            <!-- 报名结果 -->
            <block wx:for="{{item.info.item}}" wx:for-item="activity" wx:key="key">
              <view class="result-wrapper" wx:if="{{activity.student_list.length}}">
                <view class="title item-tag">
                  <text class="tag tag-empty">{{activity.name}}</text>
                  <text>已有{{activity.student_list.length}}人报名</text>
                </view>
                <view class="person-list tag-wrapper">
                  <text class="tag tag-light-grey" wx:for="{{activity.student_list}}" wx:for-item="student" wx:key="key">{{student.name}}</text>
                </view>
              </view>
            </block>
            <!-- 没有参加报名的 -->
              <view class="result-wrapper" wx:if="{{item.info.not_join_student_list.length}}">
                <view class="title item-tag">
                  <text>{{item.info.not_join_student_list.length}}人未报名</text>
                </view>
                <view class="person-list tag-wrapper" style="margin-top: 20rpx;">
                  <text class="tag tag-light-grey" wx:for="{{item.info.not_join_student_list}}" wx:for-item="nostudent" wx:key="key">{{nostudent.name}}</text>
                </view>
              </view>
          </block>
          <!-- 收款 -->
          <block wx:if="{{item.app_type === 'collection'}}">
            <view class="tag-wrapper item-tag" wx:if="{{item.info.item.length && !item.is_apply}}">
              点击缴费：
              <text class="tag-big tag tag-blue" wx:for="{{item.info.item}}" wx:for-item="collection" wx:key="key" @tap="pay({{item.id}}, {{collection.id}})">{{collection.name}} : ¥{{collection.money}}</text>
            </view>
            <block wx:for="{{item.info.item}}" wx:for-item="collection" wx:key="key">
              <view class="result-wrapper" wx:if="{{collection.student_list.length}}" style="{{item.is_apply ? 'margin-top: 30rpx;': ''}}">
                <view class="title item-tag">
                  <text>{{collection.student_list.length}}人缴费{{collection.money}}</text>
                </view>
                <view class="person-list tag-wrapper" style="margin-top: 20rpx;">
                  <text class="tag tag-light-grey" wx:for="{{collection.student_list}}" wx:for-item="student" wx:key="key" >{{student.name}}</text>
                </view>
              </view>
            </block>
            <block wx:if="{{item.info.not_join_student_list.length}}">
              <view class="result-wrapper">
                <view class="title item-tag">
                  <text>{{item.info.not_join_student_list.length}}人未缴费</text>
                </view>
                <view class="person-list tag-wrapper" style="margin-top: 20rpx;">
                  <text class="tag tag-light-grey" wx:for="{{item.info.not_join_student_list}}" wx:for-item="nostudent" wx:key="key">{{nostudent.name}}</text>
                </view>
              </view>
            </block>
          </block>
          <!-- 留言结果 -->
          <view class="comment-wrapper font-grey" wx:if="{{item.comment_list.count}}">
            <view class="flex-wrapper" style="flex-wrap:wrap;">
              <view class="font-grey iconfont icon-message text-right" style="font-size: 15px;"></view>
              <view>
                <view class="item" wx:for="{{item.comment_list.list}}" wx:for-item="comment" wx:key="key" wx:for-index="idx">
                  <block wx:if="{{comment.to_member && comment.to_member.class_nickname}}">
                    <text class="font-blue" @tap="addComment('reply',{{listIndex}}, {{item.id}},{{comment.root_id}},{{comment.id}},{{comment.member.class_nickname}}, {{comment.member.id}})">{{comment.member.class_nickname}}</text>回复<text class="font-blue" @tap="addComment('reply',{{listIndex}},{{item.id}},{{comment.root_id}},{{comment.to_comment_id}},{{comment.to_member.class_nickname}}, {{comment.to_member.id}})">{{comment.to_member.class_nickname}}：</text>
                  </block>
                  <block wx:else>
                    <text class="font-blue" @tap="addComment('reply',{{listIndex}},{{item.id}},{{comment.root_id}},{{comment.id}},{{comment.member.class_nickname}}, {{comment.member.id}})">{{comment.member.class_nickname}}: </text>
                  </block>
                  <text>{{comment.content}}</text>
                </view>
              </view>
            </view>
            <view wx:if="{{item.comment_list.count > 6 && !item.commentLoadFinished}}" class="text-center" @tap="loadMoreComment({{item.id}},{{listIndex}})">
              <text class="font-blue font-small">加载更多评论</text>
            </view>
          </view>
        </view>
      </block>

    </view>
    <view wx:if="{{this.loadFinished && !list.length}}" class="text-center">暂无内容</view>

    <!-- 左边侧边栏 -->
    <view class="sidebar sidebar-set bg-white {{setFlag ? 'show': ''}}">
      <view class="list">
        <view class="title font-bold font-black">
          <text class="iconfont icon-setting"></text>
          <text>设置</text>
        </view>
        <view catchtap="jumpPage('bindRelationship?type=edit')" wx:if="{{classInfo.id}}">身份绑定</view>
        <!-- <view catchtap="jumpPage('bindPhone')">手机绑定</view> -->
        <view catchtap="jumpPage('cashflow')">财务记账</view>
        <view catchtap="jumpPage('personalCashflow')">财务流水</view>
        <view catchtap="jumpPage('cashWithdraw')" wx:if="{{auth.finance}}">收款提现</view>
        <view catchtap="jumpPage('authorize')">家委会管理</view>
      </view>
    </view>
    <!-- 右边侧边栏 -->
    <view class="sidebar sidebar-publish bg-white {{publishFlag ? 'show': ''}}">
      <view class="list">
        <view class="title font-bold font-black">
          <text class="iconfont icon-publish"></text>
          <text>发布</text>
        </view>
        <view type="family" catchtap="jumpPage('publish','zone')" wx:if="{{auth.circles}}">家长圈</view>
        <view catchtap="jumpPage('photos')" wx:if="{{auth.photos}}">相册</view>
        <view catchtap="jumpPage('publish','notice')" wx:if="{{auth.notify}}">通知</view>
        <view catchtap="jumpPage('publish','activity')" wx:if="{{auth.activity}}">活动</view>
        <view catchtap="jumpPage('publish','money')" wx:if="{{auth.finance}}">收款</view>
        <view catchtap="jumpPage('recordCashflow')" wx:if="{{auth.finance}}">记账</view>
        <view catchtap="jumpPage('advice')">意见反馈</view>
      </view>
    </view>
    <CurrentModal
      sureBtnText="确认"
      cancelBtnText="取消"
      placeholderText="请输入评论内容"
      :flag.sync="commentFlag"
      :commentInput.sync="commentInput"
      @cancel.user="commentCancel"
      @sure.user="commentSure"
      @input.user="bindCommentInput"
    ></CurrentModal>
    <SelectModal
      :flag.sync="selectFlag"
      :list.sync="payMemberList"
      @cancel.user="toggleFlag"
      @sure.user="selectSure"
    >
    </SelectModal>
    <shareModal
      :flag.sync="showShareFlag"
      :title.sync="shareTitle"
      :imgSrc.sync="shareImg"
      @cancel.user="toggleFlag"
      @sure.user="toggleFlag"
    >
    </shareModal>
    <SureModal
      :flag.sync="showSureFlag"
      :title.sync="removeCircleTitle"
      @cancel.user="toggleFlag"
      @sure.user="toggleFlag"
    >
    </SureModal>
  </view>
</template>

<script lang="Typescript">
let replyCommentData = {
  idx: '',
  memberId: '',
  memberName: '',
  type: ''
}
import wepy from 'wepy'
import { connect, getStore } from 'wepy-redux'
import { setFromPublish, setClassChanged, setPresident } from 'store/actions'
import SelectModal from 'components/selectModal'
import CurrentModal from 'components/commentModal'
import SureModal from 'components/sureModal'
import shareModal from 'components/shareModal'
import { showMsg, previewImage, filterArrayByValue, emptyObj } from 'utils/common'
import { getCircleList, addComment, joinActivity, getCommentList, deleteCircle, addLike } from 'api/zone'
import { addOrder, getPaymentParams } from 'api/finance'
import { getAuth } from 'api/authorize'
import { checkStudent } from 'api/user'

let store = getStore()

@connect({
  fromPublish(state) {
    return state.zone.from_publish
  },
  classHasChanged(state) {
    return state.zone.classChanged
  }
})

export default class Zone extends wepy.page {
  config = {
    navigationBarTitleText: '最近班级',
    enablePullDownRefresh: true
  }
  components = {
    CurrentModal,
    SelectModal,
    shareModal,
    SureModal
  }
  data = {
    menuList: [
      {
        text: '通知',
        type: 'notice',
        src: '/images/icon/4.jpg'
      },
      {
        text: '活动',
        type: 'activity',
        src: '/images/icon/5.jpg'
      },
      {
        text: '家长圈',
        type: 'zone',
        src: '/images/icon/2.jpg'
      },
      {
        text: '收款',
        type: 'money',
        src: '/images/icon/money.jpg'
      },
      {
        text: '记账',
        type: 'account',
        src: '/images/icon/photos.jpg'
      }
    ],
    showSureFlag: false,
    commentFlag: false,
    selectFlag: false,
    activeType: 'all',
    setFlag: false,
    publishFlag: false,
    type: {
      circles: '家长圈',
      collection: '收款',
      notify: '通知',
      activity: '活动',
      account: '记账'
    },
    gradeType: {
      primary: '小学',
      middle: '初中',
      high: '高中',
      university: '大学'
    },
    shareImgSrc: {
      circles: '../images/share/circles.jpg',
      collection: '../images/share/collection.jpg',
      notify: '../images/share/notify.jpg',
      activity: '../images/share/activity.jpg',
      account: '../images/share/account.jpg'
    },
    pn: 1,
    ps: 10,
    list: [],
    payMemberList: [],
    classInfo: null,
    memberInfo: null,
    schoolInfo: null,
    loading: false,
    loadFinished: false,
    commentInput: '',
    currentReplyId: -1,
    currentReplyRootId: -1,
    currentReplyToCommentId: -1,
    currerntJoinAcitivytId: -1,
    currerntSubActivityId: [],
    currentCollectionId: -1,
    auth: {
      president: false,
      finance: false,
      activity: false,
      notify: false,
      photos: false,
      circles: false
    },
    commentPn: 2,
    commentPs: 6,
    commentOffset: 6,
    commentLoadFinished: false,
    memberList: [],
    studentIds: [],
    firstInit: true,
    paymentLocked: false,
    loadMoreCommentArray: [],
    shareTitle: '',
    showShareFlag: false,
    shareImg: '',
    removeCircleTitle: '您确认要删除吗？',
    currentRemoveMomentId: -1,
    currentRemoveMomentIdx: -1,
    currentToCommentId: -1
  }
  watch = {
    currentJoinActivityId(newVal, oldVal) {
      if (newVal > 0) {
        this.currerntSubActivityId = []
        this.$apply()
      }
    }
  }
  resetData() {
    this.loading = false
    this.loadFinished = false
    this.loadMoreCommentArray = []
    this.commentLoadFinished = false
    this.currentRemoveMomentId = -1
    this.currentRemoveMomentIdx = -1
    this.currentToCommentId = -1
    this.commentPn = 2
    this.commentPs = 6
    this.studentIds = []
    this.paymentLocked = false
    this.pn = 1
    this.list = []
    // replyCommentData = emptyObj(replyCommentData)
    this.$apply()
  }
  onPullDownRefresh() {
    this.resetData()
    this.getZoneList()
  }
  onReachBottom() {
    if (this.loading || this.loadFinished) return
    this.getZoneList()
  }
  onShow() {
    this.currerntJoinAcitivytId = -1
    this.currerntSubActivityId = []
    if (this.classHasChanged) {
      this.memberInfo = wx.getStorageSync('memberInfo')
      this.classInfo = wx.getStorageSync('classInfo')
      this.resetData()
      this.getAuthList()
      this.getZoneList()
      this.$parent.globalData.userData = this.memberInfo
      setClassChanged(false)
    }
    this.$apply()
    // 如果是从publish等页面返回，则需要刷新数据
    if (this.fromPublish) {
      this.resetData()
      this.getZoneList()
      setFromPublish(false)
    }
  }
  onLoad() {
    if (!this.checkDataExist('memberInfo')) {
      wx.reLaunch({
        url: 'login'
      })
    } else {
      this.classInfo = wx.getStorageSync('classInfo')
      this.classInfo && this.getAuthList()
      this.memberInfo = wx.getStorageSync('memberInfo')
      this.$parent.globalData.userData = this.memberInfo
      this.$apply()
      this.getZoneList()
    }
  }
  removeCircleFn(id, idx) {
    deleteCircle({
      moment_id: id,
      class_id: this.classInfo.id
    }).then(res => {
      if (res.data.success) {
        showMsg('成功删除')
        this.list.splice(idx, 1)
        this.$apply()
      }
    })
  }
  getAuthList() {
    getAuth({
      class_id: this.classInfo.id
    }).then(res => {
      this.checkAuth(res.data.data)
    })
  }
  formatAllAuth(obj) {
    Object.keys(obj).forEach(key => {
      obj[key] = true
    })
    this.$apply()
  }
  formatSingleAuth(name, booleanValue) {
    this.auth[name] = booleanValue
    this.$apply()
  }
  checkAuth(list) {
    for (let i = 0, len = list.length; i < len; i++) {
      let {code, is_auth: isAuth} = list[i]
      if (code === 'president' && isAuth) {
        setPresident(true)
        this.formatAllAuth(this.auth)
        break
      } else {
        setPresident(false)
        isAuth && this.formatSingleAuth(code, true)
        !isAuth && this.formatSingleAuth(code, false)
      }
    }
  }
  checkDataExist(key) {
    if (wx.getStorageSync(key)) {
      return true
    }
    return false
  }
  getZoneList(type) {
    this.loading = true
    this.$apply()
    const id = this.classInfo.id
    getCircleList({
      class_id: id,
      see_type: id ? '' : 'all',
      type: this.activeType,
      pn: this.pn,
      ps: this.ps,
      comment_count: 3
    }).then(res => {
      let { list } = res.data
      this.loading = false
      this.pn++
      if (list.length < this.ps) {
        this.loadFinished = true
      }
      this.list = [...this.list, ...list]
      this.$apply()
    })
  }
  paymentParams(id) {
    getPaymentParams({
      order_id: id
    }).then(res => {
      let _this = this
      let data = res.data.payment_params
      wx.requestPayment({
        timeStamp: String(data.timeStamp),
        nonceStr: data.nonceStr,
        package: data.package,
        paySign: data.paySign,
        signType: 'MD5',
        success() {
          _this.paymentLocked = false
          _this.$apply()
        },
        fail() {
          _this.paymentLocked = false
          _this.$apply()
        }
      })
    })
  }
  addToOrder(id) {
    addOrder({
      class_id: this.classInfo.id,
      student_ids: this.studentIds,
      collection_item_id: id
    }).then(res => {
      this.paymentParams(res.data.data.id)
    })
  }
  findLoadmoreCommentInfo(arr, currentId) {
    let retObj = {}
    for (let i = 0, len = arr.length; i < len; i++) {
      if (arr[i].moment_id === currentId) {
        retObj = Object.assign({}, arr[i], {
          index: i
        })
      }
    }
    return retObj
  }
  getShareActionType(type) {
    let action = '浏览'
    switch (type) {
      case 'activity':
        action = '参加'
        return action
      case 'collection':
        action = '缴费'
        return action
      default:
        return action
    }
  }
  getShareType(type) {
    let category = ''
    if (type === 'circles') {
      category = '家长圈图文'
    } else {
      category = `家委会${this.type[type]}`
    }
    return category
  }
  methods = {
    addLike(momentId, idx, isLiked) {
      if (!this.classInfo && !this.classInfo.id) {
        showMsg('请先加入班级')
        return
      }
      addLike({
        class_id: this.classInfo.id,
        moment_id: momentId
      }).then(res => {
        if (res.data.success) {
          if (isLiked) {
            showMsg('取消点赞成功')
            this.list[idx].like_list.count--
          } else {
            showMsg('点赞成功')
            this.list[idx].like_list.count++
          }
          this.list[idx].is_like = !isLiked
          const newObj = {
            moment_id: momentId,
            member_id: this.memberInfo.member_id,
            member: this.memberInfo
          }
          this.list[idx].like_list.list = filterArrayByValue(this.memberInfo.member_id, this.list[idx].like_list.list, isLiked, newObj)
          this.$apply()
        }
      })
    },
    toggleFlag(flag, booleanValue) {
      this[flag] = booleanValue
      if (flag === 'showSureFlag' && booleanValue) {
        this[flag] = false
        this.removeCircleFn(this.currentRemoveMomentId, this.currentRemoveMomentIdx)
      }
      this.$apply()
    },
    shareCircle(type) {
      let shareActionType = this.getShareActionType(type)
      let shareType = this.getShareType(type)
      this.shareTitle = `${this.memberInfo.nickname}分享了一个${shareType}，点击${shareActionType}`
      this.shareImg = this.shareImgSrc[type]
      this.showShareFlag = true
      this.$apply()
    },
    removeCircle(id, idx) {
      this.showSureFlag = true
      this.currentRemoveMomentId = id
      this.currentRemoveMomentIdx = idx
      this.$apply()
    },
    pay(momentId, collectionId) {
      if (this.paymentLocked) {
        return
      }
      this.paymentLocked = true
      checkStudent({
        class_id: this.classInfo.id,
        moment_id: momentId,
        is_pay: 0
      }).then(res => {
        this.payMemberList = res.data.list
        if (!this.payMemberList.length) {
          this.paymentLocked = false
          this.$apply()
          showMsg('请勿重复缴费')
          return
        }
        if (this.payMemberList.length > 1) {
          this.selectFlag = true
          this.currentCollectionId = collectionId
          this.$apply()
        } else {
          this.studentIds = []
          this.studentIds.push(this.payMemberList[0].id)
          this.addToOrder(collectionId)
        }
      })
    },
    submitJoinActivity() {
      if (this.currerntJoinAcitivytId <= 0) {
        showMsg('请先选择活动项目')
        return
      }
      joinActivity({
        class_id: this.classInfo.id,
        activity_item_id: this.currerntSubActivityId,
        activity_id: this.currerntJoinAcitivytId
      }).then(res => {
        if (res.data.success) {
          showMsg('提交成功')
          this.currerntSubActivityId = []
          this.$apply()
        }
      })
    },
    joinActivity(id, subId, listIndex, activityIndex) {
      if (!this.classInfo) {
        showMsg('请先选择班级')
        return
      }
      this.currerntJoinAcitivytId = id
      const index = this.currerntSubActivityId.indexOf(subId)
      if (index > -1) {
        this.currerntSubActivityId.splice(index, 1)
        this.list[listIndex].info.item[activityIndex].checked = false
      } else {
        this.currerntSubActivityId.push(subId)
        this.list[listIndex].info.item[activityIndex].checked = true
      }
      this.$apply()
    },
    loadMoreComment(momentId, idx) {
      const retObj = this.findLoadmoreCommentInfo(this.loadMoreCommentArray, momentId);
      getCommentList({
        moment_id: momentId,
        ps: this.commentPs,
        pn: retObj.commentPn ? retObj.commentPn : this.commentPn,
        offset: this.commentOffset
      }).then(res => {
        if (res.data.success) {
          let resultList = res.data.list
          let {list} = this.list[idx].comment_list
          list = [...list, ...resultList]
          this.list[idx].comment_list.list = list
          if (resultList.length < this.commentPs) {
            this.list[idx].commentLoadFinished = true
          }
          if (!retObj.commentPn) {
            const obj = {
              commentPn: this.commentPn + 1,
              moment_id: momentId
            }
            this.loadMoreCommentArray.push(obj)
          } else {
            this.loadMoreCommentArray[retObj.index].commentPn = retObj.commentPn + 1;
          }
          this.$apply()
        }
      })
    },
    addComment(type, listIndex, id, rootId, toCommentId, name, memberId) {
      console.log(arguments)
      replyCommentData.idx = listIndex
      replyCommentData.type = type
      replyCommentData.memberId = memberId
      replyCommentData.memberName = name
      if (!this.classInfo) {
        showMsg('请先选择班级')
        return
      }
      if (memberId === this.memberInfo.member_id) {
        showMsg('请不要回复自己')
        return
      }
      this.commentFlag = true
      this.currentReplyId = id
      this.currentReplyRootId = type === 'add' ? 0 : rootId
      this.currentToCommentId = toCommentId
      if (name !== undefined) {
        this.commentInput = `@${name}:`
      } else {
        this.commentInput = ''
      }
      this.$apply()
    },
    bindCommentInput (value) {
      this.commentInput = value
      this.$apply()
    },
    commentSure () {
      this.commentFlag = false
      addComment({
        class_id: this.classInfo.id,
        moment_id: this.currentReplyId,
        content: this.currentReplyId > 0 ? this.commentInput.replace(/^@.+:/, '') : this.commentInput,
        root_id: this.currentReplyRootId,
        to_comment_id: this.currentToCommentId
      }).then(res => {
        if (res.data.success) {
          // this.resetData()
          // this.getZoneList()
          let { idx, memberId, memberName, type } = replyCommentData
          this.insertComment({
            idx,
            memberId,
            memberName,
            type,
            content: this.currentReplyId > 0 ? this.commentInput.replace(/^@.+:/, '') : this.commentInput,
            toCommentId: this.currentToCommentId
          })
          this.commentInput = ''
          this.$apply()
        }
      })
    },
    jumpPublish(value) {
      if (!this.classInfo) {
        showMsg('请选绑定班级', 3000)
        return
      }
      if (value === 'account' && !this.auth.finance) {
        showMsg('您没有财务权限', 3000)
        return
      }
      let url = value === 'account' ? 'recordCashflow' : `publish?type=${value}`
      wx.navigateTo({
        url: url
      })
    },
    commentCancel () {
      this.commentFlag = false
      this.commentInput = ''
      this.$apply()
    },
    jumpPage (pageName, type) {
      this.publishFlag = false
      this.setFlag = false
      wx.navigateTo({
        url: `${pageName}?type=${type}`
      })
    },
    toggleMenu (type) {
      if (!this.classInfo) {
        showMsg('请选绑定班级', 3000)
        return
      }
      this[type] = !this[type]
      this.$apply()
    },
    closeToggle () {
      this.setFlag = false
      this.publishFlag = false
      this.$apply()
    },
    preview(img, imgList) {
      previewImage(img, imgList)
    },
    selectSure(value) {
      if (!value.length) {
        showMsg('请选择')
        return
      }
      const val = value
      this.studentIds = [...val]
      this.selectFlag = false
      this.$apply()
      this.addToOrder(this.currentCollectionId)
    }
  }
  insertComment(params) {
    let { idx, memberId, memberName, content, toCommentId } = params
    let data = {
      member: this.memberInfo,
      to_member: {
        id: memberId,
        class_nickname: memberName
      },
      root_id: null,
      content: content,
      to_comment_id: toCommentId
    }
    this.list[idx].comment_list.list.push(data)
    this.list[idx].comment_list.count++
    this.$apply()
  }
  onShareAppMessage(res) {
    return {
      title: this.shareTitle,
      imageUrl: this.shareImg
    }
  }
}
</script>

<style lang="scss" scoped>
@import '../styles/mixins.scss';
@include upload-img-wrapper;
.add-coma {
  position: relative;
  margin-right: 10rpx;
}
.result-wrapper {
  font-size: 28rpx !important;
}
.create-time {
  margin-top: 20rpx;
}
.invoice-wrapper {
  margin-top: 30rpx;
  .tag {
    margin-bottom:0 !important;
  }
}
.buttons {
  position:absolute;
  right:40rpx;
  bottom:30rpx;
  display: flex;
  .small-avatar {
    width:50rpx;
    height:50rpx;
    margin-right: 10rpx;
  }
  & > view {
    &:first-child {
      margin-right: 40rpx;
    }
  }
}
.msg-card {
  background-color: #fff;
  margin-bottom: 30rpx;
  padding: 30rpx;
}
.tag-wrapper {
  padding: 20rpx 0;
  &.no-padding {
    padding: 0;
  }
}
.see-type {
  &.between {
    justify-content: space-between;
  }
  &.right {
    justify-content: flex-end;
  }
  padding: 20rpx 0;
  & > .icon-wrapper {
    display: flex;
    justify-content: space-between;
    width: 30%;
    .iconfont {
      font-size: 32rpx;
    }
    .icon-message {
      font-size: 40rpx;
    }
  }
}
.img-list {
  margin-bottom: 0;
  &.one-img {
    .img-item {
      width: 400rpx;
      height: 225rpx;
    }
  }
  &.extra-margin {
    margin-top: 30rpx;
  }
}
.menu-wrapper {
  background-color:#fff;
  padding:40rpx;
  color:#000;
  // width:calc(94% - 80rpx);
  margin:40rpx auto;
  border-radius:20rpx;
  overflow:hidden;
  & > view {
    width: 20%;
    text-align: center;
    & > image {
      width: 60rpx;
      height: 60rpx;
      display: block;
      margin: 0 auto;
      margin-bottom: 20rpx;
    }
    & > text {
      display: block;
      margin: 0 auto;
    }
  }
}
.img-mask {
  position:relative;
  color:#fff;
  height:360rpx;
  border-radius:20rpx;
  overflow:hidden;
  .iconfont {
    margin-right: 10rpx;
  }
  .icon-edit {
    transform:scaleX(0.9);
  }
  .bg-img {
    width: 100%;
    height: 360rpx;
  }
  .mask {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border-radius: 20rpx;
    background:rgba(0,0,0,.4);
  }
  .btn {
    position: absolute;
    top: 40rpx;
    &-set {
      left: 20rpx;
    }
    &-publish {
      right: 20rpx;
    }
  }
  .caption {
    position: absolute;
    bottom: 30rpx;
    left: 40rpx;
    line-height: 2;
    text {
      display: block;
    }
    .class {
      font-size: 30rpx;
    }
  }
}
.item-wrapper {
  margin-top: 30rpx;
  color: #000;
  background-color:#EBEBEB;
  & > .item {
    margin-bottom:20rpx;
    padding:30rpx;
    background-color:#fff;
    border-radius:20rpx;
    overflow:hidden;
    margin:30rpx auto;
  }
}
.item {
  &-desc {
    background-color: #f1f1f1;
    color: #000;
    padding: 30rpx;
    border-radius: 12rpx;
    overflow: hidden;
    margin: 40rpx 0;
    line-height: 1.4;
    &.no-bg {
      background-color: transparent;
    }
  }
  &-tag {
    color: #464646;
  }
  .tag {
    margin-bottom: 20rpx;
    &.active {
      border: 2rpx solid #000;
      color: #000;
    }
  }
}
.comment-wrapper {
  line-height: 50rpx;
  margin: 20rpx 0;
  .item {
    padding-left: 10rpx;
  }
}
.sidebar {
  position: fixed;
  height: 100%;
  top: 0;
  width: 60%;
  z-index: 2;
  transition: all .3s;
  &.show {
    transform: translateX(0);
  }
  &-set {
    left: 0;
    transform: translateX(-100%);
  }
  &-publish {
    right: 0%;
    transform:translateX(100%);

  }
  .list {
    position:absolute;
    left:0;
    right:0;
    bottom:0;
    top:0;
    margin:auto;
    width:80%;
    text-align:center;
    height:70%;
    & > view {
      height:100rpx;
      line-height:100rpx;
      border-bottom:2rpx solid #f1f1f1;
      &.title {
        font-size: 40rpx;
        font-weight: bold;
        .iconfont {
          margin-right: 20rpx;
        }
      }
    }
  }
}

</style>
