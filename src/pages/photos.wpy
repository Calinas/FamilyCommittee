<template lang="wxml" minapp="wepy">
  <view class="common-container">
    <block wx:for="{{list}}" wx:key="{{key}}">
      <view class="photo-title font-black">{{item.upload_date}} {{item.upload_members}}上传</view>
      <view class="img-list flex-wrapper">
        <repeat for="{{item.img_list}}" index="index" item="imgSrc">
            <image @tap='preview({{imgSrc}}, {{item.img_list}})' class='img-item' src="{{imgSrc+'?imageMogr2/thumbnail/300x/gravity/Center/crop/640x360'}}" lazy-load />
            <!-- <image src='../../images/close-white.png' @tap="closeImg" class="close-btn"/> -->
        </repeat>
      </view>
    </block>
    <view class="fixed-bottom-btn flex-wrapper fixed-bottom-btn-1">
      <view class="text-center" style="width: 100%;" @tap="upload">上传</view>
    </view>
  </view>

</template>

<script>
import wepy from 'wepy'
import { uploadImage, showMsg, previewImage } from '../utils/common'
import { photoIndex, addPhoto } from '../api/zone'
export default class bindRelationship extends wepy.page {
  config = {
    navigationBarTitleText: '相册'
  }
  data = {
    msg: '',
    list: [],
    memberInfo: null,
    classInfo: null,
    ps: 10,
    pn: 1,
    maxCount: 6,
    imgList: [],
    uploads: []
  }
  onLoad() {
    this.classInfo = wx.getStorageSync('classInfo')
    this.memberInfo = wx.getStorageSync('memberInfo')
    this.getPhotoList()
    this.$apply()
  }
  getPhotoList() {
    photoIndex({
      ps: this.ps,
      pn: this.pn,
      class_id: this.classInfo.id
    }).then(res => {
      let list = []
      let returnList = res.data.list
      for (let i = 0, len = returnList.length; i < len; i++) {
        list[i] = {
          img_list: [],
          upload_date: returnList[i].upload_date,
          upload_members: returnList[i].upload_members
        }
        for (let j = 0, len = returnList[i].img_list.length; j < len; j++) {
          let obj = returnList[i].img_list[j]
          list[i].img_list.push(obj.img_url)
        }
      }
      this.list = list
      this.$apply()
    })
  }
  addPhotos () {
    addPhoto({
      class_id: this.classInfo.id,
      img_url: this.imgList
    }).then(res => {
      if (res.data.success) {
        showMsg('提交成功')
        this.getPhotoList()
        this.imgList = []
        this.$apply()
      }
    })
  }
  methods = {
    preview(url, urls) {
      previewImage(url, urls)
    },
    upload() {
      let _this = this
      wx.chooseImage({
        count: 9,
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: res => {
          const length = res.tempFilePaths.length
          if (length > this.maxPhotoCount) {
            wx.showToast({
              title: '最多只能选择' + this.maxPhotoCount + '张图片',
              icon: 'none'
            })
          }
          wx.showLoading({title: '图片上传中'})
          res.tempFilePaths.forEach(path => {
            let upload = {}
            upload.path = path
            upload.error = false
            upload.uploadProgress = wx.uploadFile({
              url: `${this.globalData.url}/file/uploadPic`,
              filePath: path,
              formData: {
                'member_id': this.memberInfo.member_id,
                'member_token': this.memberInfo.member_token,
                'folder': 'committee'
              },
              name: 'file',
              success: res => {
                const data = JSON.parse(res.data)
                if (data.data && data.data.file_url) {
                  const url = data.data.file_url
                  _this.imgList.push(url)
                }
                if (_this.imgList.length === length) {
                  setTimeout(() => {
                    wx.hideLoading()
                  }, 2000)
                  _this.addPhotos()
                }
                _this.$apply()
              }
            })
            upload.uploadProgress.onProgressUpdate(function(res) {
              upload.progress = res.progress
            })
            _this.uploads.push(upload)
            _this.$apply()
          })
        }
      })
    }
  }
}
</script>

<style lang="scss">
.picker {
  margin-top: 40rpx;
  font-size: 32rpx;
}
textarea {
 width:calc(100% - 40rpx);
 border:1px solid #f1f1f1;
 margin-bottom:40rpx;
 padding:20rpx;
}
.photo-title {
  margin-top: 2rem;
  margin-bottom: 1rem;
}
.img-list {
  margin-bottom: 100rpx;
  flex-wrap: wrap;
  .img-item {
    position: relative;
    width: 30%;
    margin-right:5%;
    margin-bottom:40rpx;
    height:200rpx;
    overflow: hidden;
    &:nth-child( 3n+3 ) {
      margin-right: 0;
    }
    .close-btn {
      position: absolute;
      right: 0;
      top: 0;
      width: 40rpx;
      height: 40rpx;
    }
  }
}
</style>
