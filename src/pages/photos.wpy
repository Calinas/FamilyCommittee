<template lang="wxml" minapp="wepy">
  <view class="common-container">
    <view wx:for="{{list}}" wx:key="{{key}}" class="{{index === list.length -1 ? 'last' : 'not-last'}}">
      <view class="photo-title font-black">{{item.upload_date}} {{item.upload_members}}上传</view>
      <view class="img-list flex-wrapper">
        <repeat for="{{item.img_list}}" index="imgIndex" item="imgSrc">
          <view class="img-item">
            <image @tap='preview({{imgSrc}}, {{item.preview_list}})' src="{{imgSrc.img_url+'?imageView2/1/w/300/h/300'}}" lazy-load />
            <view class="close-btn" wx:if="{{imgSrc.type !== 'none'}}" @tap="editPhoto({{index}}, {{imgIndex}}, {{imgSrc.type}}, {{imgSrc.member_id}})">
              <view class="inner" wx:if="{{imgSrc.type === 'delete'}}"></view>
            </view>
          </view>
        </repeat>
      </view>
    </view>
    <!-- <view class="fixed-bottom-btn top right" @tap="chooseAll" wx:if="{{isEditMode}}">全选</view> -->
    <view class="fixed-bottom-btn flex-wrapper fixed-bottom-btn-1">
      <view class="text-center btn-white btn" @tap="setPhotoEdit" wx:if="{{!isEditMode}}">编辑</view>
      <view class="text-center btn btn-white width30" wx:else @tap="deletePhoto">删除</view>
      <view class="text-center btn" wx:if="{{!isEditMode}}" @tap="upload">上传</view>
      <view class="text-center btn width30" wx:else @tap="reset">放弃</view>
    </view>
  </view>

</template>

<script>
import wepy from 'wepy'
import { connect, getStore } from 'wepy-redux'
import { showMsg, previewImage } from 'utils/common'
import { photoIndex, addPhoto, delPhoto } from 'api/zone'

let store = getStore()

@connect({
  isPresident(state) {
    return state.zone.isPresident
  }
})

export default class bindRelationship extends wepy.page {
  config = {
    navigationBarTitleText: '相册'
  }
  data = {
    msg: '',
    list: [],
    memberInfo: null,
    classInfo: null,
    ps: 6,
    pn: 1,
    maxCount: 6,
    imgList: [],
    uploads: [],
    isEditMode: false,
    deleteIds: [],
    loading: false,
    loadFinished: false
  }
  onReachBottom() {
    if (this.loading || this.loadFinished) return
    this.getPhotoList()
  }
  onLoad() {
    console.log(store.getState())
    this.classInfo = wx.getStorageSync('classInfo')
    this.memberInfo = wx.getStorageSync('memberInfo')
    this.getPhotoList()
    this.$apply()
  }
  getPhotoList() {
    this.loading = true
    photoIndex({
      ps: this.ps,
      pn: this.pn,
      class_id: this.classInfo.id
    }).then(res => {
      let returnList = [...res.data.list]
      for (let i = 0, len = returnList.length; i < len; i++) {
        returnList[i] = {
          img_list: returnList[i].img_list,
          upload_date: returnList[i].upload_date,
          upload_members: returnList[i].upload_members,
          preview_list: []
        }
        for (let j = 0, len = returnList[i].img_list.length; j < len; j++) {
          let obj = returnList[i].img_list[j]
          obj.type = this.isEditMode ? 'edit' : 'none'
          returnList[i].preview_list.push(obj.img_url)
        }
      }
      this.list = [...this.list, ...returnList]
      if (res.data.list.length < this.ps) {
        this.loadFinished = true
      }
      this.loading = false
      this.pn++
      this.$apply()
    })
  }
  addPhotos () {
    addPhoto({
      class_id: this.classInfo.id,
      img_url: this.imgList
    }).then(res => {
      if (res.data.success) {
        showMsg('提交成功')
        this.resetData()
        this.getPhotoList()
        this.imgList = []
        this.$apply()
      }
    })
  }
  loopPhoto (type) {
    for (let i = 0, len = this.list.length; i < len; i++) {
      let imgList = this.list[i].img_list
      for (let j = 0, length = imgList.length; j < length; j++) {
        if (type === 'edit' && (imgList[j].member_id !== this.memberInfo.member_id && !this.isPresident)) {
          console.log(1)
          // 编辑模式下，如果不是本人也不是会长，则不展示编辑框
          imgList[j].type = 'none'
        }
        else {
          imgList[j].type = type
        }
      }
    }
  }
  resetPhoto() {
    this.deleteIds = []
    this.isEditMode = false
    this.loopPhoto('none')
    this.$apply()
  }
  resetData() {
    this.ps = 6
    this.pn = 1
    this.loading = false
    this.loadFinished = false
    this.list = []
    this.$apply()
  }
  methods = {
    editPhoto(listIdx, imgListIdx, type, memberId) {
      if (this.memberInfo.member_id !== memberId && !this.isPresident) {
        showMsg('您没有权限删除该照片')
        return
      }
      const val = type === 'edit' ? 'delete' : 'edit'
      const id = this.list[listIdx].img_list[imgListIdx].photo_img_id
      this.list[listIdx].img_list[imgListIdx].type = val
      if (val === 'delete') {
        this.deleteIds.push(id)
      } else {
        const idx = this.deleteIds.indexOf(id)
        this.deleteIds.splice(idx, 1)
      }
      this.$apply()
    },
    chooseAll() {
      this.loopPhoto('delete')
      this.$apply()
    },
    reset() {
      this.resetPhoto()
    },
    deletePhoto() {
      if (!this.deleteIds.length) return
      delPhoto({photo_img_ids: this.deleteIds, class_id: this.classInfo.id}).then(res => {
        if (res.data.success) {
          showMsg('删除成功')
          this.resetPhoto()
          this.resetData()
          this.getPhotoList()
        }
      })
      this.$apply()
    },
    setPhotoEdit() {
      this.isEditMode = true
      this.loopPhoto('edit')
      this.$apply()
    },
    preview(url, urls) {
      previewImage(url, urls)
    },
    upload() {
      let _this = this
      wx.chooseImage({
        count: 9,
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: res => {
          const length = res.tempFilePaths.length
          if (length > this.maxPhotoCount) {
            wx.showToast({
              title: '最多只能选择' + this.maxPhotoCount + '张图片',
              icon: 'none'
            })
          }
          wx.showLoading({title: '图片上传中'})
          res.tempFilePaths.forEach(path => {
            let upload = {}
            upload.path = path
            upload.error = false
            upload.uploadProgress = wx.uploadFile({
              url: `${wepy.$appConfig.baseUrl}/file/uploadPic`,
              filePath: path,
              formData: {
                'member_id': this.memberInfo.member_id,
                'member_token': this.memberInfo.member_token,
                'folder': 'committee'
              },
              name: 'file',
              success: res => {
                const data = JSON.parse(res.data)
                if (data.data && data.data.file_url) {
                  const url = data.data.file_url
                  _this.imgList.push(url)
                }
                if (_this.imgList.length === length) {
                  setTimeout(() => {
                    wx.hideLoading()
                  }, 2000)
                  _this.addPhotos()
                }
                _this.$apply()
              }
            })
            upload.uploadProgress.onProgressUpdate(function(res) {
              upload.progress = res.progress
            })
            _this.uploads.push(upload)
            _this.$apply()
          })
        }
      })
    }
  }
}
</script>

<style lang="scss" scoped>
.fixed-bottom-btn {
  .btn {
    width: 50%;
    &-white {
      background-color: #fff;
      color: #1F9E3C;
    }
  }
}
.picker {
  margin-top: 40rpx;
  font-size: 32rpx;
}
textarea {
 width:calc(100% - 40rpx);
 border:1px solid #f1f1f1;
 margin-bottom:40rpx;
 padding:20rpx;
}
.photo-title {
  margin-bottom: 1rem;
}
.last {
  margin-bottom: 100rpx;
}
.img-list {
  flex-wrap: wrap;
  &.last {
    margin-bottom: 100rpx;
  }
  .img-item {
    position: relative;
    width: 30%;
    margin-right:5%;
    margin-bottom:40rpx;
    height:200rpx;
    overflow: hidden;
    &:nth-child( 3n+3 ) {
      margin-right: 0;
    }
    & > image {
      width: 100%;
      height: 100%;
    }
    .close-btn {
      position:absolute;
      right:5px;
      bottom:5px;
      width:20px;
      height:20px;
      background-color:white;
      border:1px solid #1F9E3C;
      border-radius:50%;
      .inner {
        position:absolute;
        width: 30rpx;
        height: 30rpx;
        right:5rpx;
        bottom:5rpx;
        background-color:#1F9E3C;
        border-radius:50%;
      }
    }
  }
}
</style>
