
<template lang="wxml" minapp="wepy">
  <view class="join-class common-container common-container-grey">
    <view class="flex-wrapper navigation-bar center">
      <view class="item first {{type === 'create' ? 'active': ''}}" @tap="setPage('createClass', 'create')">{{type === 'create' ? '当前：创建班级' : '切换至创建班级'}}</view>
      <view class="item middle {{type === 'join' ? 'active' : ''}}" @tap="setPage('createClass', 'join')">{{type === 'join' ? '当前：加入班级' : '切换至加入班级'}}</view>
      <view class="item right" @tap="setPage('selectClass')">切换至选择班级</view>
    </view>
    <picker mode="selector" value="{{cityIndex}}" range="{{cityList}}" range-key="city_name" wx:key="{{index}}" @change="bindPicker" id="cityIndex">
      <view class="common-picker">
        <text>{{cityName}}</text>
        <text class="iconfont icon-arrow-right"></text>
      </view>
    </picker>
    <view class="class-select-wrapper flex-wrapper">
      <view class="item common-line {{index === activeClassType ? 'active' : ''}}" wx:for="{{classTypes}}" wx:key="{{index}}" @tap="select({{index}})">{{item.title}}</view>
    </view>
    <!-- <picker class="" mode="selector" value="{{schoolIndex}}" range="{{schoolList}}" range-key="name" @change="bindPicker" id="schoolIndex" >
      <view class="common-picker">
        <text>{{schoolList[schoolIndex].name}}</text>
        <text class="iconfont icon-arrow-right"></text>
      </view>
    </picker> -->
    <view class="common-picker search-school-wrapper">
      <input value="{{keywords}}" placeholder="请输入学校名称搜索" @input="bindInput" id="keywords" focus/>
      <text class="iconfont icon-delete" @tap="deleteSchool"></text>
      <scroll-view scroll-y class="{{showSchool ? 'show' : 'hide'}}">
        <block wx:if="{{schoolList.length}}">
          <view class="list" wx:for="{{schoolList}}" @tap="setSchool({{item}})">{{item.name}}</view>
        </block>
        <block wx:else>
          <view class="text-center" style="padding-top: 60rpx;" @tap="hideSchool">没有找到学校，<text catchtap="createSchool" class="font-blue">点击此处创建该学校</text></view>
        </block>
      </scroll-view>
    </view>

    <view class="common-picker" style="background-color: transparent;padding: 0;">
      <!-- <text>2019年10班</text>
      <text class="iconfont icon-arrow-right"></text> -->
      <view class="flex-wrapper center" style="padding: 30rpx;background-color: #fff;margin-right: 20rpx">
        <input type="number" placeholder="比如2021" id="gradeNumber" @input="bindInput">
        <text>级</text>
      </view>
      <view class="flex-wrapper center" style="padding: 30rpx;background-color: #fff;">
        <input type="number" placeholder="输入班级号" id="classNumber" @input="bindInput">
        <text>班</text>
      </view>
      <view></view>
    </view>

    <view class="common-line text-center font-green submit-btn" @tap="submit">下一步</view>

    <view class="flex-wrapper between bottom-buttons" style="display: none;">
      <button open-type="share" class="link font-30">邀请他人来创建班级</button>
      <button class="link font-30">加入已有班级</button>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import { connect, getStore } from 'wepy-redux'
import { setCityList, getCityName, saveLocation, setCityName } from '../store/actions'
import { showMsg, throttle, isEmptyString } from '../utils/common'
import { schoolList, searchClass, getCityInfo, getCityList, createSchool} from '../api/createClass'

let store = getStore()

@connect(
  {
    cityList(state) {
      return state.zone.city_list
    },
    cityName(state) {
      return state.zone.city_name
    },
    longitude(state) {
      return state.zone.lng
    },
    latitude(state) {
      return state.zone.lat
    }
  }
)

export default class joinClass extends wepy.page {
  config = {
    navigationBarTitleText: '创建班级'
  }
  data = {
    classNumber: 0,
    gradeNumber: 0,
    activeClassType: 0,
    showSchool: false,
    classTypes: [
      {
        title: '幼儿园',
        id: 0,
        value: 'kindergarten'
      },
      {
        title: '小学',
        id: 1,
        value: 'primary'
      },
      {
        title: '初中',
        id: 2,
        value: 'middle'
      },
      {
        title: '高中',
        id: 3,
        value: 'high'
      }
    ],
    memberInfo: null,
    schoolList: [],
    type: '',
    keywords: '',
    schoolId: 0,
    cityIndex: -1
  }
  checkClassExist(data) {
    searchClass(data).then(res => {
      let data = res.data.data
      if (data && data.id) {
        wepy.navigateTo({
          url: `joinClass?classId=${data.id}&name=${data.name}`
        })
      } else {
        showMsg('您输入的班级不存在，请重试')
      }
    })
  }
  createClassCallback(data) {
    this.$parent.globalData.createClass = data
    wepy.navigateTo({
      url: 'bindRelationship?type=create'
    })
  }
  methods = {
    setPage(page, type) {
      if (page === 'createClass') {
        this.type = type
        wx.setNavigationBarTitle({
          title: this.type === 'join' ? '加入班级' : '创建班级'
        })
        this.$apply()
      } else {
        wx.switchTab({
          url: 'classList'
        })
      }
    },
    deleteSchool() {
      this.keywords = ''
      this.schoolId = 0
      this.showSchool = false
      this.$apply()
    },
    setSchool(obj) {
      this.schoolId = obj.id
      this.keywords = obj.name
      this.showSchool = false
      this.$apply()
    },
    createSchool() {
      createSchool({
        name: this.keywords,
        city_name: this.cityName
      }).then(res => {
        let data = res.data
        if (data.success) {
          showMsg('学校创建成功')
          this.schoolId = data.data.school_id
          this.showSchool = false
          this.$apply()
        }
      })
    },
    hideSchool() {
      this.showSchool = false
      this.$apply()
    },
    bindInput(e) {
      const id = e.currentTarget.id
      this[id] = e.detail.value
      if (id === 'keywords' && !isEmptyString(this.keywords)) {
        throttle(this.getSchoolList, this, 1000)
      } else {
        this.showSchool = false
      }
      this.$apply()
    },
    select(index) {
      this.activeClassType = index
      this.$apply()
    },
    bindPicker(e) {
      const id = e.currentTarget.id
      const value = e.detail.value
      this[id] = value
      id === 'cityIndex' && setCityName(this.cityList[value].city_name)
    },
    submit() {
      if (!this.gradeNumber) {
        showMsg('请输入级别号')
        return
      }
      if (!this.classNumber) {
        showMsg('请输入班级号')
        return
      }
      if (!this.schoolId) {
        showMsg('请输入学校名称')
        return
      }
      let data = {
        school_id: this.schoolId,
        grade: this.classTypes[this.activeClassType].value,
        year: Number(this.gradeNumber),
        class: Number(this.classNumber)
      }
      this.type === 'create' && this.createClassCallback(data)
      this.type === 'join' && this.checkClassExist(data)
    }
  }
  onLoad(params) {
    //在小程序一个生命周期内，应该只有一次定位和一次请求所有城市
    !this.cityList.length && setCityList()
    !this.longitude && this.wxGetLocation()
    this.type = params.type
    wx.setNavigationBarTitle({
      title: this.type === 'join' ? '加入班级' : '创建班级'
    })
    const globalData = this.$parent.globalData
    this.memberInfo = globalData.memberInfo
    this.$apply()
  }
  wxGetLocation() {
    wx.getLocation({
      type: 'wgs84',
      complete(res) {
        const lat = res.latitude,
              lng = res.longitude
        saveLocation({lat, lng})
        getCityName({lat, lng})
      }
    })
  }
  getSchoolList() {
    if (!this.keywords.length) return
    // 如果输入两个字，删除一个字，剩余一个字的时候也会触发getSchoolList（实际上两个字都删除）,所以这里多加一层判断
    schoolList({
      keywords: this.keywords,
      city_name: this.cityName
    }).then(res => {
      this.schoolList = res.data.list
      this.showSchool = true
      this.$apply()
    })
  }
}
</script>

<style lang="scss" scoped>
.navigation-bar {
  .item {
    color: #fff;
    background-color:#464646;
    padding: 20rpx 10rpx;
    text-align: center;
    font-size: 26rpx;
    flex: 1;
    &.active {
      background-color: #A11717;
    }
    &.middle {
      border-left: 2rpx solid #fff;
      border-right: 2rpx solid #fff;
    }
    &.first {
      border-top-left-radius: 40rpx;
      border-bottom-left-radius: 40rpx;
    }
    &.right {
      border-top-right-radius: 40rpx;
      border-bottom-right-radius: 40rpx;
    }
  }
}
.search-school-wrapper {
  position: relative;
  overflow: visible;
  input {
    text-align: left;
  }
  scroll-view {
    position: absolute;
    left: 0;
    top: 114rpx;
    width: 100%;
    background-color: #fff;
    z-index: 999;
    transition: all .3s;
    padding-left:40rpx;
    box-sizing:border-box;
    text-align: left;
    .list {
      height:80rpx;
      line-height:80rpx;
    }
    &.show {
      min-height: 200rpx;
      max-height: 400rpx;
    }
    &.hide {
      height: 0;
    }
  }
}
.class-select-wrapper {
  .item {
    flex: 1;
    text-align: center;
    &.active {
      background-color: #2DB200;
      color: #fff;
    }
  }
}
.create-btn {
  padding: 40rpx 0;
}
.bottom-buttons .link {
  background-color:transparent;
  border:none;
  margin-top:40rpx;
  padding-left:0;
  padding-right: 0;
  margin-left:0;
  margin-right: 0;
  &::after {
    display: none;
  }
}
.icon-arrow-right {
  color: #808080;
  font-size: 24rpx;
}
.submit-btn {
  margin-top: 200rpx;
}
</style>
