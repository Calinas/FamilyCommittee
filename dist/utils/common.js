'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkNum = exports.emptyObj = exports.filterArrayByValue = undefined;
exports.checkMobile = checkMobile;
exports.showMsg = showMsg;
exports.isEmptyString = isEmptyString;
exports.friendlyDate = friendlyDate;
exports.uploadImage = uploadImage;
exports.previewImage = previewImage;
exports.getOnlyDate = getOnlyDate;
exports.throttle = throttle;
exports.checkHasJoinClass = checkHasJoinClass;

var _wepy = require('./../npm/wepy/lib/wepy.js');

var _wepy2 = _interopRequireDefault(_wepy);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function checkMobile(phone) {
  var pattern = /^[1][345789]\d{9}$/;
  if (!pattern.exec(phone)) return false;
  return true;
}

// 2秒钟的弹窗
function showMsg(msg) {
  var timer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;

  wx.showToast({
    title: msg,
    icon: 'none',
    duration: timer
  });
}

// 检查是否为空字符串
function isEmptyString(str) {
  return !str || str.length === 0 || /^\s*$/.test(str);
}

// 获取时间戳
function friendlyDate(stime) {
  var da = new Date();
  var sda = new Date(stime * 1000);
  var time2 = da.getTime();
  var time1 = stime * 1000;
  var time = 0;
  if (time1 > time2) {
    time = time1 - time2;
    sda = da;
  } else {
    time = time2 - time1;
  }
  if (time < 1000) return '刚刚';
  time = parseInt(time / 1000);
  if (time > 86400) {
    var day = parseInt(time / (24 * 60 * 60));
    if (day === 1) {
      return '昨天 ' + sda.getHours() + ':' + sda.getMinutes();
    } else if (day > 1 && day < 365) {
      var month = sda.getMonth() + 1;
      var date = sda.getDate();
      if (month <= 9) {
        month = '0' + month;
      }
      if (date <= 9) {
        date = '0' + date;
      }
      return month + '-' + date;
    } else {
      var month = sda.getMonth() + 1;
      var date = sda.getDate();
      if (month <= 9) {
        month = '0' + month;
      }
      if (date <= 9) {
        date = '0' + date;
      }
      return sda.getFullYear() + '-' + month + "-" + date;
    }
  } else if (time > 3600) {
    var hour = parseInt(time / (60 * 60));
    return hour + '小时前';
  } else if (time > 60) {
    var hour = parseInt(time / 60);
    return hour + '分钟前';
  } else {
    return time + '秒前';
  }
}

function uploadImage() {
  var memberInfo = wx.getStorageSync('memberInfo');
  return new Promise(function (resolve, reject) {
    wx.chooseImage({
      count: 1,
      sizeType: ['original', 'compressed'],
      sourceType: ['album', 'camera'],
      success: function success(res) {
        var tempFilePaths = res.tempFilePaths;
        wx.showLoading();
        wx.uploadFile({
          url: _wepy2.default.$appConfig.baseUrl + '/file/uploadPic',
          filePath: tempFilePaths[0],
          formData: {
            'member_id': memberInfo.member_id,
            'member_token': memberInfo.member_token,
            'folder': 'committee'
          },
          name: 'file',
          success: function success(res) {
            var data = JSON.parse(res.data);
            var url = data.data.file_url;
            wx.hideLoading();
            resolve(url);
          }
        });
      }
    });
  });
}

// 图片放大功能
function previewImage(src, imgList) {
  wx.previewImage({
    current: src,
    urls: imgList
  });
}

// 只获取日期
function getOnlyDate(timeStr) {
  return timeStr.split(' ')[0];
}

// 函数节流
function throttle(method) {
  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;
  var timer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 300;

  clearTimeout(method.tId);
  method.tId = setTimeout(function () {
    method.call(context);
  }, timer);
}

function checkHasJoinClass(classId, classList) {
  var returnArray = classList.filter(function (item) {
    return Number(item.class.id) === Number(classId);
  });
  return !!returnArray.length;
}

var filterArrayByValue = exports.filterArrayByValue = function filterArrayByValue(keyName, arr, booleanValue, newObj) {
  var currentIdx = -1;
  for (var i = 0, len = arr.length; i < len; i++) {
    if (arr[i].member_id === keyName) {
      currentIdx = i;
      break;
    }
  }
  if (booleanValue) {
    arr.splice(currentIdx, 1);
    return arr;
  } else {
    return arr.concat(newObj);
  }
};

var emptyObj = exports.emptyObj = function emptyObj(obj) {
  Object.keys(obj).forEach(function (key) {
    obj[key] = '';
  });
  return obj;
};

var checkNum = exports.checkNum = function checkNum(num) {
  var pattern = /^([1-9]\d*|0)(\.\d*[1-9])?$/;
  if (!pattern.exec(num)) {
    return false;
  }
  return true;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,